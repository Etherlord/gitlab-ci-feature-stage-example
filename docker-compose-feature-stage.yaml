version: '3'

services:
    db:
        image: postgres:15.4
        healthcheck:
            test: pg_isready -d ${DB_NAME}
            interval: 5s
            timeout: 5s
            retries: 30
        environment:
            - POSTGRES_USER=feature-stage
            - POSTGRES_PASSWORD=${POSTGRES_STAGE_PASSWORD}
            - TZ=Europe/Moscow
        volumes:
            - postgres:/var/lib/postgresql/data:delegated
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.tcp.routers.db-${FEATURE_ENV_HOST}.entryPoints=postgres
            - traefik.tcp.routers.db-${FEATURE_ENV_HOST}.rule=HostSNI(`db-${FEATURE_ENV_HOST}.stage.example.com`)
            - traefik.tcp.routers.db-${FEATURE_ENV_HOST}.tls=true
            - traefik.tcp.services.db-${FEATURE_ENV_HOST}.loadBalancer.server.port=5432

    php:
        image: gitlab.example.com/backend/api:${FEATURE_ENV_HOST}
        depends_on:
            db:
                condition: service_healthy
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.php-${FEATURE_ENV_HOST}.service=php-${FEATURE_ENV_HOST}
            - traefik.http.routers.php-${FEATURE_ENV_HOST}.entryPoints=https
            - traefik.http.routers.php-${FEATURE_ENV_HOST}.rule=Host(`api-${FEATURE_ENV_HOST}.stage.example.com`)
            - traefik.http.routers.php-${FEATURE_ENV_HOST}.tls=true
            - traefik.http.services.php-${FEATURE_ENV_HOST}.loadBalancer.server.port=80

volumes:
    postgres: null

networks:
    traefik-public:
        external: true
